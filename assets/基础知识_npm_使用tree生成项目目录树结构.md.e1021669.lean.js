import{_ as e,v as t,b as r,R as o}from"./chunks/framework.f9e03a9a.js";const _=JSON.parse('{"title":"使用tree生成项目目录树结构","description":"","frontmatter":{},"headers":[],"relativePath":"基础知识/npm/使用tree生成项目目录树结构.md","filePath":"基础知识/npm/使用tree生成项目目录树结构.md","lastUpdated":1690941204000}'),n={name:"基础知识/npm/使用tree生成项目目录树结构.md"},a=o('<h1 id="使用tree生成项目目录树结构" tabindex="-1">使用tree生成项目目录树结构 <a class="header-anchor" href="#使用tree生成项目目录树结构" aria-label="Permalink to &quot;使用tree生成项目目录树结构&quot;">​</a></h1><h3 id="基于node的treer" tabindex="-1">基于node的treer <a class="header-anchor" href="#基于node的treer" aria-label="Permalink to &quot;基于node的treer&quot;">​</a></h3><p>全局安装：<code>npm install -g treer</code></p><p>使用示例：<code>treer -e ./result.txt -i node_modules</code></p><blockquote><p>遍历到result.txt文件，忽略node_modules</p><p><strong>缺陷</strong>:格式固定,参数顺序前后顺序不可随意调换，不能选择目录层级</p></blockquote><p>npm详细使用文档：<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Ftreer" target="_blank" rel="noreferrer">www.npmjs.com/package/tre…</a></p><h3 id="基于node的tree-node-cli-推荐" tabindex="-1">基于node的tree-node-cli （推荐） <a class="header-anchor" href="#基于node的tree-node-cli-推荐" aria-label="Permalink to &quot;基于node的tree-node-cli （推荐）&quot;">​</a></h3><p>全局安装：<code>npm install -g tree-node-cli</code></p><p>使用示例：<code>tree -L 3 -I &quot;node_modules&quot; &gt; tree.md</code></p><blockquote><p>遍历三层目录结构，忽略node_modules，输出到tree.md</p><p><strong>缺点</strong>:依赖node,得装tree-node-cli工具</p></blockquote><p>npm详细使用文档：<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Ftree-node-cli" target="_blank" rel="noreferrer">www.npmjs.com/package/tre…</a></p><h3 id="基于node的tree-cli" tabindex="-1">基于node的tree-cli <a class="header-anchor" href="#基于node的tree-cli" aria-label="Permalink to &quot;基于node的tree-cli&quot;">​</a></h3><p><strong>注意</strong>:如果你之前安装了 <code>tree-node-cli</code>,而现在又继续安装 <code>tree-cli</code>,现在安装的会覆盖之前安装的,避免命令的冲突,可以先卸载之前的 <code>tree-node-cli</code>,使用的命令是: <code>npm uninstall -g tree-node-cli</code>,反过来也是一样</p><p>全局安装：<code>npm install -g tree-cli</code></p><p>使用示例：<code>tree -l 3 -o out.txt -d --ignore &#39;node_modules/&#39;</code></p><blockquote><p>此时你可以把你整理好的readme文档更改提交到代码仓库当中了,然而当你发现把生成号的目录结构上传到github或者公司的gitlab项目上,你会发现,<strong>生成的目录结构并没有如本地的一样,以树状图展示的,而是挤在一块的</strong></p><p>非常粗暴的解决办法就是:<strong>把目录结构用反引号给包裹起来</strong>（markdown语法）</p></blockquote><p>npm详细使用文档：<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Ftree-cli" target="_blank" rel="noreferrer">www.npmjs.com/package/tre…</a></p><p>作者：叽歪小Q 链接：<a href="https://juejin.cn/post/6869586796435472397" target="_blank" rel="noreferrer">https://juejin.cn/post/6869586796435472397</a> 来源：稀土掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>',18),d=[a];function c(p,l,s,i,m,h){return t(),r("div",null,d)}const g=e(n,[["render",c]]);export{_ as __pageData,g as default};
